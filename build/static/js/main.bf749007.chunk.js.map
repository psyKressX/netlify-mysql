{"version":3,"sources":["components/header.jsx","components/createProfile.jsx","components/tableRow.jsx","components/profiles.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","display","Component","CreateProfile","state","firstName","lastName","userName","email","gender","password","confirm","sumbitFail","formErrors","success","handleChange","e","preventDefault","target","name","value","setState","handleSubmit","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","props","refresh","this","onSubmit","type","placeholder","maxLength","onChange","noValidate","defaultValue","disabled","hidden","action","Row","id","Profiles","fetchProfiles","data","profiles","catch","err","pP","refreshed","map","list","key","userID","App","isFetching","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf749007.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <header >\r\n        <nav className=\"navbar navbar-dark bg-dark justify-content-between\">\r\n          <div>\r\n            <i className=\"fa fa-globe p-2\"></i>\r\n            <p className=\"navbar-brand\">Liams serverless Netlify MySQL</p>\r\n          </div>\r\n          <div>\r\n            <ul style={{display: \"inline-block\"}} className= \"nav navbar-nav navbar-right\">\r\n              <li style={{display: \"inline-block\"}} className=\"nav-item mr-3\">Profiles</li>\r\n              <li style={{display: \"inline-block\"}} className=\"nav-item\"><span><i className=\"fa fa-user-circle\"></i></span></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass CreateProfile extends Component {\r\n\r\n  state={\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    gender: null,\r\n    password: null,\r\n    confirm: null,\r\n    sumbitFail: false,\r\n    formErrors:{\r\n      success: null,\r\n      firstName: null,\r\n      lastName: null,\r\n      userName:null,\r\n      gender:null,\r\n      email: null,\r\n      password: null,\r\n      confirm: null\r\n    }\r\n  }\r\n\r\n  handleChange = e =>{\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value});\r\n  }\r\n\r\n  handleSubmit = e =>{\r\n    e.preventDefault();\r\n    const { firstName, lastName, userName, gender, email, password, confirm } = this.state;\r\n    fetch(`/.netlify/functions/create-profile`, {\r\n      method: \"POST\",\r\n      headers: {'Accept': 'application/json',\r\n      'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ firstName, lastName, userName, gender, email, password, confirm })\r\n    }).then(\r\n      res => res.json()\r\n    )\r\n    .then(res =>  {\r\n      console.log(\"this is result\", res);\r\n      this.setState({ formErrors : res });\r\n      this.props.refresh();\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const formErrors = this.state.formErrors;\r\n\r\n    return (\r\n\r\n<form onSubmit={this.handleSubmit} className='p-4'>\r\n\r\n<div className=\"primary-header brand\">\r\n  <h3>Registration Form</h3>\r\n</div>\r\n\r\n{formErrors.success !== null&&(\r\n  <small className='successMessage'>{formErrors.success}</small>\r\n)}\r\n\r\n<div className=\"primary-body\">\r\n\r\n<div className=\"pb-2 row\">\r\n  <div className=\"form-group col-6\">\r\n    <input\r\n      type=\"text\"\r\n      name=\"firstName\"\r\n      placeholder=\"First Name\"\r\n      className=\"form-control\"\r\n      maxLength='15'\r\n      onChange={this.handleChange}\r\n    />\r\n    {formErrors.firstName !== null&&(\r\n      <small className='errorMessage'>{formErrors.firstName}</small>\r\n    )}\r\n  </div>\r\n\r\n  <div className=\"form-group col-6\">\r\n    <input\r\n      type=\"text\"\r\n      name=\"lastName\"\r\n      placeholder=\"Last Name\"\r\n      className=\"form-control\"\r\n      maxLength='15'\r\n      noValidate\r\n      onChange={this.handleChange}\r\n    />\r\n    {formErrors.lastName !==null &&(\r\n      <small className='errorMessage'>{formErrors.lastName}</small>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group pb-2\">\r\n  <input\r\n    type=\"text\"\r\n    name=\"userName\"\r\n    placeholder=\"Username\"\r\n    className=\"form-control\"\r\n    maxLength='15'\r\n    noValidate\r\n    onChange={this.handleChange}\r\n  />\r\n  {formErrors.userName !==null &&(\r\n    <small className='errorMessage'>{formErrors.userName}</small>\r\n  )}\r\n</div>\r\n\r\n<div className=\"form-group pb-2\">\r\n  <input\r\n    type=\"text\"\r\n    name=\"email\"\r\n    placeholder=\"Email Address\"\r\n    className=\"form-control\"\r\n    maxLength='40'\r\n    noValidate\r\n    onChange={this.handleChange}\r\n  />\r\n  {formErrors.email !==null &&(\r\n    <small className='errorMessage'>{formErrors.email}</small>\r\n  )}\r\n</div>\r\n\r\n<div className=\"form-group pb-2\">\r\n  <select\r\n    name=\"gender\"\r\n    className=\"form-control\"\r\n    onChange={this.handleChange}\r\n    defaultValue='DEFAULT'\r\n  >\r\n    <option disabled hidden value='DEFAULT'>Gender</option>\r\n    <option value=\"male\">Male</option>\r\n    <option value=\"female\">Female</option>\r\n    <option value=\"other\">Other</option>\r\n    <option value=\"fake\">fake</option>\r\n  </select>\r\n  {formErrors.gender !==null && (\r\n    <small className='errorMessage'>{formErrors.gender}</small>\r\n  )}\r\n</div>\r\n\r\n<div className=\"form-group pb-2\">\r\n  <small>8-15 characters, must include atleast 1 number.</small>\r\n  <input\r\n    type=\"password\"\r\n    name=\"password\"\r\n    placeholder=\"Password\"\r\n    className=\"form-control\"\r\n    maxLength='15'\r\n    noValidate\r\n    onChange={this.handleChange}\r\n  />\r\n  {formErrors.password !==null &&(\r\n    <small className='errorMessage'>{formErrors.password}</small>\r\n  )}\r\n</div>\r\n\r\n<div className=\"form-group pb-4\">\r\n  <input\r\n    type=\"password\"\r\n    name=\"confirm\"\r\n    placeholder=\"Confirm Password\"\r\n    className=\"form-control\"\r\n    maxLength='15'\r\n    noValidate\r\n    onChange={this.handleChange}\r\n  />\r\n  {formErrors.confirm !==null && (\r\n    <small className='errorMessage'>{formErrors.confirm}</small>\r\n  )}\r\n</div>\r\n\r\n<div className=\"form-group pb-2 d-flex justify-content-end\">\r\n  <button className=\"btn btn-default btn-custom\" action='onSubmit'>Register</button>\r\n</div>\r\n\r\n<small className='d-flex justify-content-end'>Already Have an Account?</small>\r\n\r\n</div>\r\n\r\n</form>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CreateProfile;\r\n","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\ncomponentDidMount(){\r\n  console.log(this.props.id);\r\n}\r\n\r\n  render() {\r\n\r\n    const { firstName, lastName, userName, gender, password, id, email} = this.props\r\n\r\n    return (\r\n      <tr >\r\n        <th className=\"col-md-2\">{id}</th>\r\n        <td className=\"col-md-2\">{firstName}</td>\r\n        <td className=\"col-md-2\">{lastName}</td>\r\n        <td className=\"col-md-2\">{userName}</td>\r\n        <td className=\"col-md-2\">{email}</td>\r\n        <td className=\"col-md-2\">{gender}</td>\r\n        <td className=\"col-md-2\">{password}</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport Row from './tableRow';\r\n\r\nclass Profiles extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      profiles: []\r\n    }\r\n  }\r\n  fetchProfiles= () =>{\r\n    fetch('/.netlify/functions/profiles')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({profiles : data})\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchProfiles();\r\n  }\r\n  componentWillUpdate(pP) {\r\n    if(pP.fetch){\r\n      this.fetchProfiles();\r\n      this.props.refreshed();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>MySQL Profiles</h4>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td className=\"col-md-2\">ID</td>\r\n              <td className=\"col-md-2\">firstName</td>\r\n              <td className=\"col-md-2\">lastName</td>\r\n              <td className=\"col-md-2\">userName</td>\r\n              <td className=\"col-md-2\">email</td>\r\n              <td className=\"col-md-2\">gender</td>\r\n              <td className=\"col-md-2\">password</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.profiles.map(list =>(\r\n              <Row\r\n                key={list.userID}\r\n                firstName={list.firstName}\r\n                lastName={list.lastName}\r\n                userName={list.userName}\r\n                email={list.email}\r\n                gender={list.gender}\r\n                password={list.password}\r\n                id={list.userID}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Profiles;\r\n","import React, {Component} from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './components/header';\nimport CreateProfile from './components/createProfile';\nimport Profiles from './components/profiles';\n\nclass App extends Component {\n  state={\n    isFetching: false\n  }\n  refresh = () =>{\n    this.setState({ isFetching : true });\n  }\n  refreshed = () =>{\n    this.setState({ isFetching : false });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id=\"primary\" className='container d-flex justify-content-center'>\n          <Profiles fetch={this.state.isFetching} refreshed={this.refreshed}/>\n          <CreateProfile refresh={this.refresh} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}